{"version":3,"sources":["components/portal/index.js","components/button/index.js","components/modal/index.js","components/layout/index.js","App.js","reportWebVitals.js","index.js"],"names":["Portal","domEl","document","createElement","body","appendChild","this","removeChild","children","props","ReactDom","createPortal","Component","Button","onClick","className","active","attrs","classes","classNames","defaultProps","Modal","title","isOpen","onCancel","type","Layout","state","openModal","setState","handleCancel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6RAmBeA,E,4MAfVC,MAAQC,SAASC,cAAc,O,kEAG5BD,SAASE,KAAKC,YAAYC,KAAKL,S,6CAG/BC,SAASE,KAAKG,YAAYD,KAAKL,S,+BAGzB,IACEO,EAAaF,KAAKG,MAAlBD,SACR,OAAOE,IAASC,aAAaH,EAAUF,KAAKL,W,GAZ/BW,a,+BCIfC,G,MAAS,SAAC,GAET,IADHL,EACE,EADFA,SAAUM,EACR,EADQA,QAASC,EACjB,EADiBA,UAAWC,EAC5B,EAD4BA,OAAWC,EACvC,2DAEIC,EAAUC,IACZ,MACAJ,EACA,CAAEC,WAGN,OACI,kDACIC,GADJ,IAEAF,UAAWG,EACXJ,QAASA,EAHT,SAIKN,OAYbK,EAAOO,aAAe,CAClBZ,SAAU,iBACVM,QAAS,aACTC,UAAW,GACXC,QAAQ,GAGGH,QCjCTQ,G,MAAQ,SAAC,GAER,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,OAAQC,EACX,EADWA,SAGf,OACE,mCACID,GACA,cAAC,EAAD,UACE,qBAAKR,UAAU,gBAAf,SACE,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,sBAAhB,SAAuCO,IACtC,sBAAMP,UAAU,sBAAhB,SACI,cAAC,EAAD,CAAQA,UAAU,mBAAmBU,KAAK,SAASX,QAASU,EAA5D,uBAGP,qBAAKT,UAAU,aAAf,kBAGA,qBAAKA,UAAU,eAAf,SACC,sBAAMA,UAAU,sBAAhB,oCAcfM,EAAMD,aAAe,CACnBE,MAAO,cACPC,QAAQ,EACRC,SAAU,cAEGH,QCXAK,G,kNA7BbC,MAAQ,CACNJ,QAAQ,G,EAGVK,UAAY,WACV,EAAKC,SAAS,CAAEN,QAAQ,K,EAG1BO,aAAe,WACb,EAAKD,SAAS,CAAEN,QAAQ,K,uDAIxB,OACE,cAAC,WAAD,UACI,qBAAKR,UAAU,UAAf,SACI,sBAAKA,UAAU,OAAf,UACN,cAAC,EAAD,CAAQA,UAAU,iBAAiBD,QAASR,KAAKsB,UAAjD,wBACA,cAAC,EAAD,CACEL,OAAQjB,KAAKqB,MAAMJ,OACnBC,SAAUlB,KAAKwB,0B,GArBJlB,cCINmB,MANf,WACE,OACA,cAAC,EAAD,KCMaC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAAS0C,eAAe,SAM1BZ,M","file":"static/js/main.1f2198ba.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nclass Portal extends Component {\r\n     domEl = document.createElement('div');\r\n\r\n    componentDidMount() {\r\n        document.body.appendChild(this.domEl);\r\n}\r\n    componentWillUnmount() {\r\n        document.body.removeChild(this.domEl);\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        return ReactDom.createPortal(children, this.domEl);\r\n    }\r\n}\r\n\r\nexport default Portal;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nimport './button.css';\r\n\r\n\r\nconst Button = ({\r\n    children, onClick, className, active, ...attrs\r\n}) => {\r\n\r\n    const classes = classNames (\r\n        'btn',\r\n        className,\r\n        { active },\r\n    );\r\n\r\n    return (\r\n        <button\r\n        {...attrs}\r\n        className={classes}\r\n        onClick={onClick}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.node,\r\n    onClick: PropTypes.func,\r\n    className: PropTypes.string,\r\n    active: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n    children: 'Default button',\r\n    onClick: () => {},\r\n    className: '',\r\n    active: false,\r\n};\r\n\r\nexport default Button;\r\n    \r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Portal from '../portal/index';\r\nimport Button from '../button/index';\r\n\r\nimport '../modal/modal.css';\r\n\r\nconst Modal = ({\r\n  title, isOpen, onCancel,\r\n}) => {\r\n\r\n  return (\r\n    <>\r\n      { isOpen &&\r\n        <Portal>\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <div className=\"modal-header\">\r\n                <span className=\"modal-header__title\">{title}</span>\r\n                 <span className=\"modal-header__close\">\r\n                     <Button className=\"btn-modal-cancel\" type=\"button\" onClick={onCancel}>&times;</Button>\r\n                 </span>\r\n              </div>\r\n              <div className=\"modal-main\">\r\n                text\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n               <span className=\"modal-footer__title\">text link</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Portal>\r\n      }\r\n    </>\r\n  );\r\n};\r\nModal.propTypes = {\r\n  title: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n  onCancel: PropTypes.func,\r\n};\r\nModal.defaultProps = {\r\n  title: 'Modal title',\r\n  isOpen: false,\r\n  onCancel: () => {},\r\n};\r\nexport default Modal;","import React, { Component, Fragment } from 'react';\r\nimport Modal from '../modal/index';\r\nimport Button from '../button/index';\r\n\r\nimport './layout.css';\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    isOpen: false,\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({ isOpen: true });\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({ isOpen: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n          <div className=\"wrapper\">\r\n              <div className=\"main\">\r\n        <Button className=\"btn-modal-open\" onClick={this.openModal}>Show modal</Button>\r\n        <Modal\r\n          isOpen={this.state.isOpen}\r\n          onCancel={this.handleCancel}\r\n        />\r\n        </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n\r\n\r\n","import React from 'react';\nimport Layout from './components/layout/index';\n\n\nfunction App() {\n  return (\n  <Layout />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}